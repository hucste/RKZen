#!/bin/bash

function adb_to_bootloader() {

    display_mssg "i" "${text_adb_reboot_bootloader}" "${title_adb_reboot_bootloader}"
    ${adb} reboot-bootloader

}

function adb_mode_rewrite() {

    echo "Mount your tablet to write in..."
    ${adb} kill-server
    ${adb} wait-for-device
    ${adb} root
    ${adb} remount
    [[ $? -ne 0 ]] && adb_mount_system "w"
    echo "Your tablet is ready to write in..."

}

function adb_mount_system() {

    case "$1" in
        "r") echo "Mount system to read-only into your tablet!"; io="ro" ;;
        "w") echo "Mount system to read'n write into your tablet!"; io="rw" ;;
    esac

    ${adb} shell mount -o remount,${io} /system
    unset io

}

function adb_reboot() {

    echo "Your tablet reboot..."
    ${adb} reboot
    ${adb} kill-server
    echo "*** Enjoy-it! ***"

}

function erase_idb() {

    ${rkflash} e 0x00 0x2000

}

function reboot_tablet() {

    display_mssg "n" "${text_reboot}" "${title_reboot}"

    local pid=$(lsusb | egrep "${VID}" | sed 's/.* '"${VID}"':\([^ ]*\) .*/\1/')
    local key="$(array_search ${pid} ${PID[@]})"
    #key=$(get_key ${pid})

    write_file "log" "*** rkflashtool: $FUNCNAME: PID ${pid} - key ${key}"

    [[ -n "${key}" ]] && ${rkflash} b || adb_reboot

}

function rkflash_read_parameter()  {

    write_file "log" "*** rkflashtool: $FUNCNAME: filename $1"

    ${rkflash} p > "$1"

}

function rkflash_read_rom() {

    write_file "log" "*** rkflashtool: $FUNCNAME "

    array=("${mtd_name[@]}")

    if [[ -d "${DIR_SVG_DATED}" ]]; then
        for (( x=0 ; x < ${#files[@]} ; x++ )); do

            #key=$(get_key "${files[$x]}")
            local key="$(array_search ${files[$x]} ${mtd_name[@]})"
            write_file "log" "*** $FUNCNAME: file ${file}; key ${key}"

            $(${rkflash} r ${mtd_offset[$key]} ${mtd_size[$key]} > ${DIR_SVG_DATED}/${mtd_name[$key]}.img)
            write_file "log" "${rkflash} r ${mtd_offset[$key]} ${mtd_size[$key]} > ${DIR_SVG_DATED}/${mtd_name[$key]}.img"
            display_mssg "n" "${text_read_rom} ${DIR_SVG_DATED}/${mtd_name[$key]}.img"

            sleep 1
            unset key

        done
        unset x
    fi

    unset array

}

function rkflash_write_param() {

    # flash parameter
    if [[ -r "${FILE_PARAM}" ]]; then
        write_file "log" "*** rkflashtool: write file parameter named $1 "
        $(${rkflash} w 0x0 0x2 < "${FILE_PARAM}") && display_detected "${text_file_flashed}${FILE_PARAM}"
        sleep 1
    else
        display_error "${text_error_file_flashed}"
    fi

}

function rkflash_write_rom() {

    write_file "log" "*** rkflashtool: write rom to tablet "

    array=("${mtd_name[@]}")

    for (( x=0 ; x < ${#files[@]} ; x++ )); do

        if [[ -r "${DIR_ROM}/${files[$x]}.img" ]]; then

            #key=$(get_key "${files[$x]}")
            local key="$(array_search ${files[$x]} ${mtd_name[@]})"
            write_file "log" "*** $FUNCNAME: file ${file}; key ${key}"

            $(${rkflash} w ${mtd_offset[$key]} ${mtd_size[$key]} < ${DIR_ROM}/${mtd_name[$key]}.img)
            write_file "log" "${rkflash} w ${mtd_offset[$key]} ${mtd_size[$key]} < ${DIR_ROM}/${mtd_name[$key]}.img"
            display_mssg "n" "${text_write_rom} ${DIR_ROM}/${mtd_name[$key]}"

            sleep 1
            unset key
        fi

    done

    unset array x

}

#function write_idb() {
    ##inspired by rksp tool?

#}

