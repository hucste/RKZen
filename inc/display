#!/bin/bash

function display_detected() {

    echo -e "${green}$1${neutral}"

    write_file "log" "### Detected: $1"

}

function display_error() {

    if [[ "${ZENITY}" -ne 0 ]]; then
        zenity_error "<span color=\"red\">$1</span>" "$2"
    else
        echo -e "${red}$1${neutral}"
    fi

    write_file "log" "### Error: $1"

}

function display_files_to_flash() {

    if [[ "${ZENITY}" -ne 0 ]]; then

        files=$( echos_files_to_save | zenity_list_files "${text_menu_files}" "${title_menu_files}" "${#mtd_name[@]}")

    else

        dialog_list_files "${text_menu_files}" "${title_menu_files}" "${#mtd_name[@]}"
        [[ $? -eq 0 ]] && files=$(<"${FILE_TMP}")

    fi

    [[ "$files" ]] && write_file "log" "### Files choosed: ${files}"

}

function display_menu() {

    if [[ "${ZENITY}" -ne 0 ]]; then

        while :
        do
            choice=$( echos_menu | zenity_list "${text_welcome}" "${title_welcome}" "${count['name']}")

            case $choice in
                "${text_menu_name[1]}") proceed_initial_rom ;;
                "${text_menu_name[2]}") proceed_custom_rom ;;
                "${text_menu_name[3]}") save_tablet ;;
                "${text_menu_name[4]}") reboot_tablet ;;
                "${text_menu_name[5]}") display_mssg "n" "${text_goodbye}" "${title_goodbye}"; exit 0 ;;
            esac
        done

    elif [[ "${DIALOG}" -ne 0 ]]; then

        while :
        do

            echos_menu
            dialog_menu "${text_welcome}" "${title_welcome}" "${count['name']}"
            rm "${FILE_TMP}.menu"

            if [[ $? -eq 0 ]]; then
                choice=$(<"${FILE_TMP}")

                case $choice in
                    "${text_menu_name[1]}") proceed_initial_rom ;;
                    "${text_menu_name[2]}") proceed_custom_rom ;;
                    "${text_menu_name[3]}") save_tablet ;;
                    "${text_menu_name[4]}") reboot_tablet ;;
                    "${text_menu_name[5]}") display_mssg "n" "${text_goodbye}" "${title_goodbye}"; exit 0 ;;
                esac
            fi

        done

    else

        while :
        do
            echo "${title_welcome}"
            PS3="${text_welcome}"
            select choice in "${text_menu_description[@]}"
            do
                case $REPLY in
                    1) flash_initial_rom ;;
                    2) flash_custom_rom ;;
                    3) save_tablet ;;
                    4) reboot_tablet ;;
                    5|q|Q) display_mssg "n" "${text_goodbye}" "${title_goodbye}"; exit 0 ;;
                esac
            done
        done

    fi

    if [[ $? -eq 1 ]]; then display_mssg "n" "${text_goodbye}" "${title_goodbye}"; fi

}


function display_mssg() {

    if [[ "${ZENITY}" -ne 0 ]]; then

        case "$1" in
            i) zenity_info "$2" "$3" ;;
            n) zenity_notify "$2" "$3" ;;
            q) zenity_question "$2" "$3" ;;
        esac

    else

        case "$1" in
            q) read -p "$(echo -e $2 ${text_yes_no} )" answer ;;
            *) echo -e "$2" ;;
        esac

    fi

    write_file "log" "### Message: $2"

}

function display_mtd() {

    for (( i=0 ; i < ${#mtd[@]} ; i++ )); do
        echo -e "${vertclair}\tFound partition '${mtd_name[$i]}' of size '${mtd_size[$i]}' at offset '${mtd_offset[$i]}'${neutre}\n";
    done

}

function echos_files_to_save() {

    array=("${FILES[@]}")
    y=0

    for (( x=0 ; x < ${#mtd_name[@]} ; x++ )); do

        key=$(get_key "${mtd_name[$x]}")

        if [[ $DIALOG -eq 1 ]]; then
            [[ -n "$key" ]] &&  key=" on" || key=" off"
            let "y = $x + 1"
            list="${mtd_name[$x]} offset:${mtd_offset[$x]} $key"
            echo "$list"
        fi

        if [[ $ZENITY -eq 1 ]]; then
            [[ -n "$key" ]] && echo TRUE || echo FALSE
            echo "${mtd_name[$x]}"
            echo "${mtd_offset[$x]}"
        fi

    done

    unset array

}

function echos_menu() {

    i=1

    if [[ $DIALOG -eq 1 ]]; then

        while [ $i -le ${count["name"]} ]; do
            echo "${text_menu_name[$i]}|${text_menu_description[$i]}" >> "${FILE_TMP}.menu"
            let "i = $i + 1";
        done

        while IFS="|" read col1 col2 || [ -n "$col1" ]; do
            menu+=("$col1" "$col2")
        done < "${FILE_TMP}.menu"

    else
        while [ $i -le ${count["name"]} ]; do
            echo "${text_menu_name[$i]}";
            echo "${text_menu_description[$i]}";
            let "i = $i + 1";
        done
    fi

	unset i;

}
